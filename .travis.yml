language: python

# Defining a 2x2 test matrix with Python version and dependency versions.

python:
# We don't actually use the Travis Python (except for flake8), but this
#keeps it organized.
 - "2.7"
 - "3.6"

env:
# We have a legacy version test, and a latest version test
# Splitting numpy from rest of pip as need it before can
# compile older versions of pandas or biopython (while recent
# versions provided pre-compiled as a wheel file).
 - CONDA="trimmomatic kraken kaiju fastqc"
   NUMPY="numpy"
   PIP="numpy pandas biopython ncbi-genome-download"
 - CONDA="trimmomatic=0.36 kraken=1.0 kaiju=1.5.0 fastqc=0.11.5"
   NUMPY="numpy==1.9"
   PIP="pandas==0.14 biopython==1.67 ncbi-genome-download==0.2.6"

before_install:
 # This happens using the TravisCI copy of Python, BEFORE we install conda.
 # Doing this here as want to abort and fail quickly if style checks break.
 - pip install --upgrade pip
 - pip install flake8
 - flake8

install:
 # We want to use Conda under TravisCI for things like trimmomatic. See:
 # https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html
 - sudo apt-get update
 - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
     wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
   else
     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
   fi
 - bash miniconda.sh -b -p $HOME/miniconda
 - export PATH="$HOME/miniconda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes --set changeps1 no
 - conda update -q conda
 - conda create -q -n snowflakes python=$TRAVIS_PYTHON_VERSION
 - source activate snowflakes
 - python --version
 # Useful for debugging any issues with conda
 - conda info -a
 # We want to use the BioConda channel
 - conda config --add channels defaults
 - conda config --add channels conda-forge
 - conda config --add channels bioconda
 # ==============================================
 # Install our conda dependencies here
 - conda install $CONDA
 # ==============================================
 # Install our Python dependencies here, not bothering with a virtual env
 - pip install $NUMPY
 - pip install $PIP
 # Nasty hack for Python 2.7 HTTPS certificate problem with NCBI download
 if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then export PYTHONHTTPSVERIFY=0; fi

script:
- test/test_script.sh

notifications:
  email: false
